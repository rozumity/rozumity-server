# Generated by Django 5.1.6 on 2025-05-13 17:25

import accounts.managers
import datetime
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.SmallIntegerField(choices=[(0, 'course'), (1, 'undergraduate'), (2, 'specialist'), (3, 'master'), (4, 'postgraduate'), (5, 'doctor')], default=0)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Educations',
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SmallIntegerField()),
                ('title', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'Speciality',
                'verbose_name_plural': 'Specialities',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('description', models.TextField(max_length=500)),
                ('duration', models.DurationField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('owner_type', models.SmallIntegerField(choices=[(0, 'client'), (1, 'expert')], default=0)),
                ('has_diary', models.BooleanField(default=False)),
                ('has_ai', models.BooleanField(default=False)),
                ('has_screening', models.BooleanField(default=False)),
                ('has_dyagnosis', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('country', django_countries.fields.CountryField(max_length=2)),
            ],
            options={
                'verbose_name': 'University',
                'verbose_name_plural': 'Universities',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=64, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('is_expert', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', accounts.managers.EmailUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=32)),
                ('last_name', models.CharField(blank=True, max_length=32)),
                ('gender', models.SmallIntegerField(choices=[(0, 'male'), (1, 'female'), (2, 'non-binary'), (3, 'transgender'), (4, 'intersex'), (5, 'prefer not to say')], default=5)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('date_birth', models.DateField(blank=True, default=datetime.date(2007, 5, 18), null=True)),
                ('email', models.OneToOneField(help_text='User Email', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='email')),
            ],
            options={
                'verbose_name': "Client's Profile",
                'verbose_name_plural': "Clients' Profiles",
            },
        ),
        migrations.CreateModel(
            name='Diary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.SmallIntegerField(choices=[(0, 'light'), (1, 'dark')], default=0)),
                ('has_health_attention', models.BooleanField(default=False)),
                ('date_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.clientprofile')),
            ],
            options={
                'verbose_name': 'Diary',
                'verbose_name_plural': 'Diaries',
            },
        ),
        migrations.CreateModel(
            name='ExpertProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=32)),
                ('last_name', models.CharField(blank=True, max_length=32)),
                ('gender', models.SmallIntegerField(choices=[(0, 'male'), (1, 'female'), (2, 'non-binary'), (3, 'transgender'), (4, 'intersex'), (5, 'prefer not to say')], default=5)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('date_birth', models.DateField(blank=True, default=datetime.date(2007, 5, 18), null=True)),
                ('education_extra', models.TextField(blank=True, max_length=500)),
                ('countries_allowed', django_countries.fields.CountryField(blank=True, max_length=746, multiple=True)),
                ('education', models.ManyToManyField(blank=True, to='accounts.education')),
                ('email', models.OneToOneField(help_text='User Email', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='email')),
            ],
            options={
                'verbose_name': "Expert's Profile",
                'verbose_name_plural': "Experts' Profiles",
            },
        ),
        migrations.AddField(
            model_name='education',
            name='speciality',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.speciality'),
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=32)),
                ('last_name', models.CharField(blank=True, max_length=32)),
                ('gender', models.SmallIntegerField(choices=[(0, 'male'), (1, 'female'), (2, 'non-binary'), (3, 'transgender'), (4, 'intersex'), (5, 'prefer not to say')], default=5)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('date_birth', models.DateField(blank=True, default=datetime.date(2007, 5, 18), null=True)),
                ('email', models.OneToOneField(help_text='User Email', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='email')),
            ],
            options={
                'verbose_name': "Staff member's Profile",
                'verbose_name_plural': "Staff members' Profiles",
            },
        ),
        migrations.CreateModel(
            name='TherapyContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.clientprofile')),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.expertprofile')),
                ('subscriptionClient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contractClientPlan', to='accounts.subscriptionplan')),
                ('subscriptionExpert', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contractExpertPlan', to='accounts.subscriptionplan')),
            ],
            options={
                'verbose_name': 'Therapy Contract',
                'verbose_name_plural': 'Therapy Contracts',
            },
        ),
        migrations.AddField(
            model_name='education',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.university'),
        ),
    ]
