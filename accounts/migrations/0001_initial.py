# Generated by Django 5.2.1 on 2025-05-26 20:00

import accounts.managers
import datetime
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import djmoney.models.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('educations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=64, unique=True, verbose_name='email address')),
                ('is_client', models.BooleanField(default=False)),
                ('is_expert', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', accounts.managers.EmailUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('description', models.TextField(max_length=500)),
                ('price_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'Euro'), ('USD', 'US Dollar'), ('UAH', 'Ukrainian Hryvnia')], default='USD', editable=False, max_length=3)),
                ('price', djmoney.models.fields.MoneyField(decimal_places=2, default_currency='USD', max_digits=14)),
                ('owner_type', models.SmallIntegerField(choices=[(0, 'Client'), (1, 'Expert'), (2, 'Both')], default=2)),
                ('has_diary', models.BooleanField(default=False)),
                ('has_ai', models.BooleanField(default=False)),
                ('has_screening', models.BooleanField(default=False)),
                ('has_dyagnosis', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
            },
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('user', models.OneToOneField(editable=False, help_text='User Email', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, to_field='email')),
                ('first_name', models.CharField(blank=True, max_length=32)),
                ('last_name', models.CharField(blank=True, max_length=32)),
                ('gender', models.SmallIntegerField(choices=[(0, 'Male'), (1, 'Female'), (2, 'Non-binary'), (3, 'Transgender'), (4, 'Intersex'), (5, 'Prefer not to say')], default=5)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('date_birth', models.DateField(blank=True, default=datetime.date(2007, 5, 31), null=True)),
            ],
            options={
                'verbose_name': 'Profile Client',
                'verbose_name_plural': 'Profiles Client',
                'default_related_name': 'clientprofile',
            },
        ),
        migrations.CreateModel(
            name='ExpertProfile',
            fields=[
                ('user', models.OneToOneField(editable=False, help_text='User Email', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, to_field='email')),
                ('first_name', models.CharField(blank=True, max_length=32)),
                ('last_name', models.CharField(blank=True, max_length=32)),
                ('gender', models.SmallIntegerField(choices=[(0, 'Male'), (1, 'Female'), (2, 'Non-binary'), (3, 'Transgender'), (4, 'Intersex'), (5, 'Prefer not to say')], default=5)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('date_birth', models.DateField(blank=True, default=datetime.date(2007, 5, 31), null=True)),
                ('education_extra', models.TextField(default='', max_length=500)),
                ('countries_allowed', django_countries.fields.CountryField(blank=True, max_length=746, multiple=True)),
                ('education', models.ManyToManyField(blank=True, to='educations.education')),
            ],
            options={
                'verbose_name': 'Profile Expert',
                'verbose_name_plural': 'Profiles Expert',
                'default_related_name': 'expertprofile',
            },
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('user', models.OneToOneField(editable=False, help_text='User Email', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, to_field='email')),
                ('first_name', models.CharField(blank=True, max_length=32)),
                ('last_name', models.CharField(blank=True, max_length=32)),
                ('gender', models.SmallIntegerField(choices=[(0, 'Male'), (1, 'Female'), (2, 'Non-binary'), (3, 'Transgender'), (4, 'Intersex'), (5, 'Prefer not to say')], default=5)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('date_birth', models.DateField(blank=True, default=datetime.date(2007, 5, 31), null=True)),
            ],
            options={
                'verbose_name': 'Profile Staff',
                'verbose_name_plural': 'Profiles Staff',
            },
        ),
        migrations.CreateModel(
            name='Diary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.SmallIntegerField(choices=[(0, 'light'), (1, 'dark')], default=0)),
                ('has_health_attention', models.BooleanField(default=False)),
                ('date_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.clientprofile')),
            ],
            options={
                'verbose_name': 'Diary',
                'verbose_name_plural': 'Diaries',
            },
        ),
        migrations.CreateModel(
            name='TherapyContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_plan_days', models.SmallIntegerField(choices=[(0, 'Free'), (1, 'Day'), (7, 'Week'), (14, 'Two weeks'), (30, 'Month'), (90, 'Three months'), (180, 'Half a year'), (360, 'Year'), (999, 'Forever')], default=0)),
                ('expert_plan_days', models.SmallIntegerField(choices=[(0, 'Free'), (1, 'Day'), (7, 'Week'), (14, 'Two weeks'), (30, 'Month'), (90, 'Three months'), (180, 'Half a year'), (360, 'Year'), (999, 'Forever')], default=0)),
                ('contract_start_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('client_plan_prolong_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expert_plan_prolong_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('client_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contract_client', to='accounts.subscriptionplan')),
                ('expert_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contract_expert', to='accounts.subscriptionplan')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contract', to='accounts.clientprofile')),
                ('expert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contract', to='accounts.expertprofile')),
            ],
            options={
                'verbose_name': 'Therapy Contract',
                'verbose_name_plural': 'Therapy Contracts',
            },
        ),
    ]
